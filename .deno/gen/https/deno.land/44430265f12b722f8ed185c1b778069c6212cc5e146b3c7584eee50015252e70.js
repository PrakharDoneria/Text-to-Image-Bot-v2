// deno-lint-ignore-file no-irregular-whitespace
//# sourceMappingURL=data:application/json;base64,{"version":3,"sources":["https://deno.land/x/grammy_types@v3.11.0/message.ts"],"sourcesContent":["// deno-lint-ignore-file no-irregular-whitespace\nimport type { Chat, User } from \"./manage.ts\";\nimport type { InlineKeyboardMarkup } from \"./markup.ts\";\nimport type { PassportData } from \"./passport.ts\";\nimport type { Invoice, RefundedPayment, SuccessfulPayment } from \"./payment.ts\";\n\ntype MsgWith<P extends keyof Message> = Record<P, NonNullable<Message[P]>>;\n\nexport declare namespace Message {\n  interface ServiceMessage {\n    /** Unique message identifier inside this chat */\n    message_id: number;\n    /** Unique identifier of a message thread or a forum topic to which the message belongs; for supergroups only */\n    message_thread_id?: number;\n    /** Sender of the message; empty for messages sent to channels. For backward compatibility, the field contains a fake sender user in non-channel chats, if the message was sent on behalf of a chat. */\n    from?: User;\n    /** Sender of the message, sent on behalf of a chat. For example, the channel itself for channel posts, the supergroup itself for messages from anonymous group administrators, the linked channel for messages automatically forwarded to the discussion group. For backward compatibility, the field from contains a fake sender user in non-channel chats, if the message was sent on behalf of a chat. */\n    sender_chat?: Chat;\n    /** Date the message was sent in Unix time. It is always a positive number, representing a valid date. */\n    date: number;\n    /** Unique identifier of the business connection from which the message was received. If non-empty, the message belongs to a chat of the corresponding business account that is independent from any potential bot chat which might share the same identifier. */\n    business_connection_id?: string;\n    /** Chat the message belongs to */\n    chat: Chat;\n    /** True, if the message is sent to a forum topic */\n    is_topic_message?: boolean;\n  }\n  export interface CommonMessage extends ServiceMessage {\n    /** If the sender of the message boosted the chat, the number of boosts added by the user */\n    sender_boost_count?: number;\n    /** The bot that actually sent the message on behalf of the business account. Available only for outgoing messages sent on behalf of the connected business account. */\n    sender_business_bot?: User;\n    /** Information about the original message for forwarded messages */\n    forward_origin?: MessageOrigin;\n    /** True, if the message is a channel post that was automatically forwarded to the connected discussion group */\n    is_automatic_forward?: true;\n    /** For replies in the same chat and message thread, the original message. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply. */\n    reply_to_message?: ReplyMessage;\n    /** Information about the message that is being replied to, which may come from another chat or forum topic */\n    external_reply?: ExternalReplyInfo;\n    /** For replies that quote part of the original message, the quoted part of the message */\n    quote?: TextQuote;\n    /** For replies to a story, the original message */\n    reply_to_story?: Story;\n    /** Bot through which the message was sent */\n    via_bot?: User;\n    /** Date the message was last edited in Unix time */\n    edit_date?: number;\n    /** True, if the message can't be forwarded */\n    has_protected_content?: true;\n    /** True, if the caption must be shown above the message media */\n    show_caption_above_media?: true;\n    /** True, if the message was sent by an implicit action, for example, as an away or a greeting business message, or as a scheduled message */\n    is_from_offline?: true;\n    /** Signature of the post author for messages in channels, or the custom title of an anonymous group administrator */\n    author_signature?: string;\n    /** Options used for link preview generation for the message, if it is a text message and link preview options were changed */\n    link_preview_options?: LinkPreviewOptions;\n    /** Unique identifier of the message effect added to the message */\n    effect_id?: string;\n    /** Inline keyboard attached to the message. login_url buttons are represented as ordinary url buttons. */\n    reply_markup?: InlineKeyboardMarkup;\n  }\n  export interface CaptionableMessage extends CommonMessage {\n    /** Caption for the animation, audio, document, photo, video or voice */\n    caption?: string;\n    /** For messages with a caption, special entities like usernames, URLs, bot commands, etc. that appear in the caption */\n    caption_entities?: MessageEntity[];\n  }\n  export interface MediaMessage extends CaptionableMessage {\n    /** The unique identifier of a media message group this message belongs to */\n    media_group_id?: string;\n    /** True, if the message media is covered by a spoiler animation */\n    has_media_spoiler?: true;\n  }\n\n  export type TextMessage = CommonMessage & MsgWith<\"text\">;\n  export type AudioMessage = CaptionableMessage & MsgWith<\"audio\">;\n  export type DocumentMessage = CaptionableMessage & MsgWith<\"document\">;\n  export type AnimationMessage = DocumentMessage & MsgWith<\"animation\">;\n  export type PhotoMessage = MediaMessage & MsgWith<\"photo\">;\n  export type StickerMessage = CommonMessage & MsgWith<\"sticker\">;\n  export type StoryMessage = CommonMessage & MsgWith<\"story\">;\n  export type VideoMessage = MediaMessage & MsgWith<\"video\">;\n  export type VideoNoteMessage = CommonMessage & MsgWith<\"video_note\">;\n  export type VoiceMessage = CaptionableMessage & MsgWith<\"voice\">;\n  export type ContactMessage = CommonMessage & MsgWith<\"contact\">;\n  export type DiceMessage = CommonMessage & MsgWith<\"dice\">;\n  export type GameMessage = CommonMessage & MsgWith<\"game\">;\n  export type PollMessage = CommonMessage & MsgWith<\"poll\">;\n  export type VenueMessage = LocationMessage & MsgWith<\"venue\">;\n  export type LocationMessage = CommonMessage & MsgWith<\"location\">;\n  export type PaidMediaMessage = CommonMessage & MsgWith<\"paid_media\">;\n  export type NewChatMembersMessage =\n    & ServiceMessage\n    & MsgWith<\"new_chat_members\">;\n  export type LeftChatMemberMessage =\n    & ServiceMessage\n    & MsgWith<\"left_chat_member\">;\n  export type NewChatTitleMessage = ServiceMessage & MsgWith<\"new_chat_title\">;\n  export type NewChatPhotoMessage = ServiceMessage & MsgWith<\"new_chat_photo\">;\n  export type DeleteChatPhotoMessage =\n    & ServiceMessage\n    & MsgWith<\"delete_chat_photo\">;\n  export type GroupChatCreatedMessage =\n    & ServiceMessage\n    & MsgWith<\"group_chat_created\">;\n  export type SupergroupChatCreated =\n    & ServiceMessage\n    & MsgWith<\"supergroup_chat_created\">;\n  export type ChannelChatCreatedMessage =\n    & ServiceMessage\n    & MsgWith<\"channel_chat_created\">;\n  export type MessageAutoDeleteTimerChangedMessage =\n    & ServiceMessage\n    & MsgWith<\"message_auto_delete_timer_changed\">;\n  export type MigrateToChatIdMessage =\n    & ServiceMessage\n    & MsgWith<\"migrate_to_chat_id\">;\n  export type MigrateFromChatIdMessage =\n    & ServiceMessage\n    & MsgWith<\"migrate_from_chat_id\">;\n  export type PinnedMessageMessage = ServiceMessage & MsgWith<\"pinned_message\">;\n  export type InvoiceMessage = ServiceMessage & MsgWith<\"invoice\">;\n  export type SuccessfulPaymentMessage =\n    & ServiceMessage\n    & MsgWith<\"successful_payment\">;\n  export type RefundedPaymentMessage =\n    & ServiceMessage\n    & MsgWith<\"refunded_payment\">;\n  export type UsersSharedMessage = ServiceMessage & MsgWith<\"users_shared\">;\n  export type ChatSharedMessage = ServiceMessage & MsgWith<\"chat_shared\">;\n  export type ConnectedWebsiteMessage =\n    & ServiceMessage\n    & MsgWith<\"connected_website\">;\n  export type WriteAccessAllowedMessage =\n    & ServiceMessage\n    & MsgWith<\"write_access_allowed\">;\n  export type PassportDataMessage = ServiceMessage & MsgWith<\"passport_data\">;\n  export type ProximityAlertTriggeredMessage =\n    & ServiceMessage\n    & MsgWith<\"proximity_alert_triggered\">;\n  export type BoostAddedMessage =\n    & ServiceMessage\n    & MsgWith<\"boost_added\">;\n  export type ChatBackgroundSetMessage =\n    & ServiceMessage\n    & MsgWith<\"chat_background_set\">;\n  export type ForumTopicCreatedMessage =\n    & ServiceMessage\n    & MsgWith<\"forum_topic_created\">;\n  export type ForumTopicEditedMessage =\n    & ServiceMessage\n    & MsgWith<\"forum_topic_edited\">;\n  export type ForumTopicClosedMessage =\n    & ServiceMessage\n    & MsgWith<\"forum_topic_closed\">;\n  export type ForumTopicReopenedMessage =\n    & ServiceMessage\n    & MsgWith<\"forum_topic_reopened\">;\n  export type GeneralForumTopicHiddenMessage =\n    & ServiceMessage\n    & MsgWith<\"general_forum_topic_hidden\">;\n  export type GeneralForumTopicUnhiddenMessage =\n    & ServiceMessage\n    & MsgWith<\"general_forum_topic_unhidden\">;\n  export type GiveawayCreatedMessage =\n    & ServiceMessage\n    & MsgWith<\"giveaway_created\">;\n  export type GiveawayMessage = ServiceMessage & MsgWith<\"giveaway\">;\n  export type GiveawayWinnersMessage =\n    & ServiceMessage\n    & MsgWith<\"giveaway_winners\">;\n  export type GiveawayCompletedMessage =\n    & ServiceMessage\n    & MsgWith<\"giveaway_completed\">;\n  export type VideoChatScheduledMessage =\n    & ServiceMessage\n    & MsgWith<\"video_chat_scheduled\">;\n  export type VideoChatStartedMessage =\n    & ServiceMessage\n    & MsgWith<\"video_chat_started\">;\n  export type VideoChatEndedMessage =\n    & ServiceMessage\n    & MsgWith<\"video_chat_ended\">;\n  export type VideoChatParticipantsInvitedMessage =\n    & ServiceMessage\n    & MsgWith<\"video_chat_participants_invited\">;\n  export type WebAppDataMessage = ServiceMessage & MsgWith<\"web_app_data\">;\n}\n\ntype ReplyMessage = Message & { reply_to_message: undefined };\n\nexport interface Message extends Message.MediaMessage {\n  /** For text messages, the actual UTF-8 text of the message */\n  text?: string;\n  /** For text messages, special entities like usernames, URLs, bot commands, etc. that appear in the text */\n  entities?: MessageEntity[];\n  /** Message is an animation, information about the animation. For backward compatibility, when this field is set, the document field will also be set */\n  animation?: Animation;\n  /** Message is an audio file, information about the file */\n  audio?: Audio;\n  /** Message is a general file, information about the file */\n  document?: Document;\n  /** Message is a photo, available sizes of the photo */\n  photo?: PhotoSize[];\n  /** Message is a sticker, information about the sticker */\n  sticker?: Sticker;\n  /** Message is a forwarded story */\n  story?: Story;\n  /** Message is a video, information about the video */\n  video?: Video;\n  /** Message is a video note, information about the video message */\n  video_note?: VideoNote;\n  /** Message is a voice message, information about the file */\n  voice?: Voice;\n  /** Message is a shared contact, information about the contact */\n  contact?: Contact;\n  /** Message is a dice with random value */\n  dice?: Dice;\n  /** Message is a game, information about the game. More about games » */\n  game?: Game;\n  /** Message is a native poll, information about the poll */\n  poll?: Poll;\n  /** Message is a venue, information about the venue. For backward compatibility, when this field is set, the location field will also be set */\n  venue?: Venue;\n  /** Message is a shared location, information about the location */\n  location?: Location;\n  /** Message contains paid media; information about the paid media */\n  paid_media?: PaidMediaInfo;\n  /** New members that were added to the group or supergroup and information about them (the bot itself may be one of these members) */\n  new_chat_members?: User[];\n  /** A member was removed from the group, information about them (this member may be the bot itself) */\n  left_chat_member?: User;\n  /** A chat title was changed to this value */\n  new_chat_title?: string;\n  /** A chat photo was change to this value */\n  new_chat_photo?: PhotoSize[];\n  /** Service message: the chat photo was deleted */\n  delete_chat_photo?: true;\n  /** Service message: the group has been created */\n  group_chat_created?: true;\n  /** Service message: the supergroup has been created. This field can't be received in a message coming through updates, because bot can't be a member of a supergroup when it is created. It can only be found in reply_to_message if someone replies to a very first message in a directly created supergroup. */\n  supergroup_chat_created?: true;\n  /** Service message: the channel has been created. This field can't be received in a message coming through updates, because bot can't be a member of a channel when it is created. It can only be found in reply_to_message if someone replies to a very first message in a channel. */\n  channel_chat_created?: true;\n  /** Service message: auto-delete timer settings changed in the chat */\n  message_auto_delete_timer_changed?: MessageAutoDeleteTimerChanged;\n  /** The group has been migrated to a supergroup with the specified identifier. */\n  migrate_to_chat_id?: number;\n  /** The supergroup has been migrated from a group with the specified identifier. */\n  migrate_from_chat_id?: number;\n  /** Specified message was pinned. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply. */\n  pinned_message?: MaybeInaccessibleMessage;\n  /** Message is an invoice for a payment, information about the invoice. More about payments » */\n  invoice?: Invoice;\n  /** Message is a service message about a successful payment, information about the payment. More about payments » */\n  successful_payment?: SuccessfulPayment;\n  /** Message is a service message about a refunded payment, information about the payment. More about payments » */\n  refunded_payment?: RefundedPayment;\n  /** Service message: users were shared with the bot */\n  users_shared?: UsersShared;\n  /** Service message: a chat was shared with the bot */\n  chat_shared?: ChatShared;\n  /** The domain name of the website on which the user has logged in. More about Telegram Login » */\n  connected_website?: string;\n  /** Service message: the user allowed the bot to write messages after adding it to the attachment or side menu, launching a Web App from a link, or accepting an explicit request from a Web App sent by the method requestWriteAccess */\n  write_access_allowed?: WriteAccessAllowed;\n  /** Telegram Passport data */\n  passport_data?: PassportData;\n  /** Service message. A user in the chat triggered another user's proximity alert while sharing Live Location. */\n  proximity_alert_triggered?: ProximityAlertTriggered;\n  /** Service message: user boosted the chat */\n  boost_added?: ChatBoostAdded;\n  /* Service message: chat background set */\n  chat_background_set?: ChatBackground;\n  /** Service message: forum topic created */\n  forum_topic_created?: ForumTopicCreated;\n  /** Service message: forum topic edited */\n  forum_topic_edited?: ForumTopicEdited;\n  /** Service message: forum topic closed */\n  forum_topic_closed?: ForumTopicClosed;\n  /** Service message: forum topic reopened */\n  forum_topic_reopened?: ForumTopicReopened;\n  /** Service message: the 'General' forum topic hidden */\n  general_forum_topic_hidden?: GeneralForumTopicHidden;\n  /** Service message: the 'General' forum topic unhidden */\n  general_forum_topic_unhidden?: GeneralForumTopicUnhidden;\n  /** Service message: a scheduled giveaway was created */\n  giveaway_created?: GiveawayCreated;\n  /** The message is a scheduled giveaway message */\n  giveaway?: Giveaway;\n  /** A giveaway with public winners was completed */\n  giveaway_winners?: GiveawayWinners;\n  /** Service message: a giveaway without public winners was completed */\n  giveaway_completed?: GiveawayCompleted;\n  /** Service message: video chat scheduled */\n  video_chat_scheduled?: VideoChatScheduled;\n  /** Service message: video chat started */\n  video_chat_started?: VideoChatStarted;\n  /** Service message: video chat ended */\n  video_chat_ended?: VideoChatEnded;\n  /** Service message: new participants invited to a video chat */\n  video_chat_participants_invited?: VideoChatParticipantsInvited;\n  /** Service message: data sent by a Web App */\n  web_app_data?: WebAppData;\n}\n\n/** This object represents a unique message identifier. */\nexport interface MessageId {\n  /** Unique message identifier */\n  message_id: number;\n}\n\n/** Describes an inline message sent by a Web App on behalf of a user. */\nexport interface SentWebAppMessage {\n  /** Identifier of the sent inline message. Available only if there is an inline keyboard attached to the message. */\n  inline_message_id: string;\n}\n\n/** This object describes a message that was deleted or is otherwise inaccessible to the bot. */\nexport interface InaccessibleMessage extends\n  Omit<\n    // TypeScript cannot discriminate union types based on `0` and `number` so\n    // we work around this by including all other properties here. This mostly\n    // negates the benefit of having this interface in the first place, but not\n    // extending Message is not very ergonomic to use. If you have a better idea\n    // how to model this, please let us know!\n    Message,\n    \"chat\" | \"message_id\" | \"date\"\n  > {\n  /** Chat the message belonged to */\n  chat: Chat;\n  /** Unique message identifier inside the chat */\n  message_id: number;\n  /** Always 0. The field can be used to differentiate regular and inaccessible messages. */\n  date: 0;\n}\n\n/** This object describes a message that can be inaccessible to the bot. It can be one of\n\n- Message\n- InaccessibleMessage */\nexport type MaybeInaccessibleMessage = Message | InaccessibleMessage;\n\n/** The Bot API supports basic formatting for messages. You can use bold, italic, underlined, strikethrough, spoiler text, block quotations as well as inline links and pre-formatted code in your bots' messages. Telegram clients will render them accordingly. You can specify text entities directly, or use markdown-style or HTML-style formatting.\n\nNote that Telegram clients will display an **alert** to the user before opening an inline link ('Open this link?' together with the full URL).\n\nMessage entities can be nested, providing following restrictions are met:\n- If two entities have common characters, then one of them is fully contained inside another.\n- bold, italic, underline, strikethrough, and spoiler entities can contain and can be part of any other entities, except pre and code.\n- blockquote and expandable_blockquote entities can't be nested.\n- All other entities can't contain each other.\n\nLinks `tg://user?id=<user_id>` can be used to mention a user by their identifier without using a username. Please note:\n\n- These links will work only if they are used inside an inline link or in an inline keyboard button. For example, they will not work, when used in a message text.\n- Unless the user is a member of the chat where they were mentioned, these mentions are only guaranteed to work if the user has contacted the bot in private in the past or has sent a callback query to the bot via an inline button and doesn't have Forwarded Messages privacy enabled for the bot.\n\nYou can find the list of programming and markup languages for which syntax highlighting is supported at [libprisma#supported-languages](https://github.com/TelegramMessenger/libprisma#supported-languages).\n\n#### MarkdownV2 style\nTo use this mode, pass *MarkdownV2* in the *parse_mode* field. Use the following syntax in your message:\n\n```\n*bold \\*text*\n_italic \\*text_\n__underline__\n~strikethrough~\n||spoiler||\n*bold _italic bold ~italic bold strikethrough ||italic bold strikethrough spoiler||~ __underline italic bold___ bold*\n[inline URL](http://www.example.com/)\n[inline mention of a user](tg://user?id=123456789)\n![👍](tg://emoji?id=5368324170671202286)\n`inline fixed-width code`\n`​`​`\npre-formatted fixed-width code block\n`​`​`\n`​`​`python\npre-formatted fixed-width code block written in the Python programming language\n`​`​`\n>Block quotation started\n>Block quotation continued\n>Block quotation continued\n>Block quotation continued\n>The last line of the block quotation\n***>The second expandable block quotation started right after the previous\n>It is separated from the previous block quotation by an empty bold entity\n>Expandable block quotation continued\n>Hidden by default part of the expandable block quotation started\n>Expandable block quotation continued\n>The last line of the expandable block quotation with the expandability mark||\n```\nPlease note:\n\n- Any character with code between 1 and 126 inclusively can be escaped anywhere with a preceding '\\' character, in which case it is treated as an ordinary character and not a part of the markup. This implies that '\\' character usually must be escaped with a preceding '\\' character.\n- Inside `pre` and `code` entities, all '`' and '\\' characters must be escaped with a preceding '\\' character.\n- Inside the `(...)` part of the inline link and custom emoji definition, all ')' and '\\' must be escaped with a preceding '\\' character.\n- In all other places characters '_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!' must be escaped with the preceding character '\\'.\n- In case of ambiguity between `italic` and `underline` entities `__` is always greadily treated from left to right as beginning or end of an `underline` entity, so instead of `___italic underline___` use `___italic underline_**__`, adding an empty bold entity as a separator.\n- A valid emoji must be provided as an alternative value for the custom emoji. The emoji will be shown instead of the custom emoji in places where a custom emoji cannot be displayed (e.g., system notifications) or if the message is forwarded by a non-premium user. It is recommended to use the emoji from the emoji field of the custom emoji sticker.\n- Custom emoji entities can only be used by bots that purchased additional usernames on Fragment.\n\n#### HTML style\nTo use this mode, pass *HTML* in the *parse_mode* field. The following tags are currently supported:\n\n```html\n<b>bold</b>, <strong>bold</strong>\n<i>italic</i>, <em>italic</em>\n<u>underline</u>, <ins>underline</ins>\n<s>strikethrough</s>, <strike>strikethrough</strike>, <del>strikethrough</del>\n<span class=\"tg-spoiler\">spoiler</span>, <tg-spoiler>spoiler</tg-spoiler>\n<b>bold <i>italic bold <s>italic bold strikethrough <span class=\"tg-spoiler\">italic bold strikethrough spoiler</span></s> <u>underline italic bold</u></i> bold</b>\n<a href=\"http://www.example.com/\">inline URL</a>\n<a href=\"tg://user?id=123456789\">inline mention of a user</a>\n<tg-emoji emoji-id=\"5368324170671202286\">👍</tg-emoji>\n<code>inline fixed-width code</code>\n<pre>pre-formatted fixed-width code block</pre>\n<pre><code class=\"language-python\">pre-formatted fixed-width code block written in the Python programming language</code></pre>\n<blockquote>Block quotation started\\nBlock quotation continued\\nThe last line of the block quotation</blockquote>\n<blockquote expandable>Expandable block quotation started\\nExpandable block quotation continued\\nExpandable block quotation continued\\nHidden by default part of the block quotation started\\nExpandable block quotation continued\\nThe last line of the block quotation</blockquote>\n```\nPlease note:\n\n- Only the tags mentioned above are currently supported.\n- All `<`, `>` and `&` symbols that are not a part of a tag or an HTML entity must be replaced with the corresponding HTML entities (`<` with `&lt;`, `>` with `&gt;` and `&` with `&amp;`).\n- All numerical HTML entities are supported.\n- The API currently supports only the following named HTML entities: `&lt;`, `&gt;`, `&amp;` and `&quot;`.\n- Use nested `pre` and `code` tags, to define programming language for pre entity.\n- Programming language can't be specified for standalone `code` tags.\n- A valid emoji must be used as the content of the tg-emoji tag. The emoji will be shown instead of the custom emoji in places where a custom emoji cannot be displayed (e.g., system notifications) or if the message is forwarded by a non-premium user. It is recommended to use the emoji from the emoji field of the custom emoji sticker.\n- Custom emoji entities can only be used by bots that purchased additional usernames on Fragment.\n\n#### Markdown style\nThis is a legacy mode, retained for backward compatibility. To use this mode, pass *Markdown* in the *parse_mode* field. Use the following syntax in your message:\n\n```\n*bold text*\n_italic text_\n[inline URL](http://www.example.com/)\n[inline mention of a user](tg://user?id=123456789)\n`inline fixed-width code`\n`​`​`\npre-formatted fixed-width code block\n`​`​`\n`​`​`python\npre-formatted fixed-width code block written in the Python programming language\n`​`​`\n```\nPlease note:\n\n- Entities must not be nested, use parse mode MarkdownV2 instead.\n- There is no way to specify “underline”, “strikethrough”, “spoiler”, “blockquote”, “expandable_blockquote” and “custom_emoji” entities, use parse mode MarkdownV2 instead.\n- To escape characters '_', '*', '`', '[' outside of an entity, prepend the characters '\\' before them.\n- Escaping inside entities is not allowed, so entity must be closed first and reopened again: use `_snake_\\__case_` for italic `snake_case` and `*2*\\**2=4*` for bold `2*2=4`. */\nexport type ParseMode = \"Markdown\" | \"MarkdownV2\" | \"HTML\";\n\nexport declare namespace MessageEntity {\n  interface AbstractMessageEntity {\n    /** Type of the entity. Currently, can be “mention” (@username), “hashtag” (#hashtag), “cashtag” ($USD), “bot_command” (/start@jobs_bot), “url” (https://telegram.org), “email” (do-not-reply@telegram.org), “phone_number” (+1-212-555-0123), “bold” (bold text), “italic” (italic text), “underline” (underlined text), “strikethrough” (strikethrough text), “spoiler” (spoiler message), “blockquote” (block quotation), “expandable_blockquote” (collapsed-by-default block quotation), “code” (monowidth string), “pre” (monowidth block), “text_link” (for clickable text URLs), “text_mention” (for users without usernames), “custom_emoji” (for inline custom emoji stickers) */\n    type: string;\n    /** Offset in UTF-16 code units to the start of the entity */\n    offset: number;\n    /** Length of the entity in UTF-16 code units */\n    length: number;\n  }\n  export interface CommonMessageEntity extends AbstractMessageEntity {\n    type:\n      | \"mention\"\n      | \"hashtag\"\n      | \"cashtag\"\n      | \"bot_command\"\n      | \"url\"\n      | \"email\"\n      | \"phone_number\"\n      | \"bold\"\n      | \"italic\"\n      | \"underline\"\n      | \"strikethrough\"\n      | \"spoiler\"\n      | \"blockquote\"\n      | \"expandable_blockquote\"\n      | \"code\";\n  }\n  export interface PreMessageEntity extends AbstractMessageEntity {\n    type: \"pre\";\n    /** For “pre” only, the programming language of the entity text */\n    language?: string;\n  }\n  export interface TextLinkMessageEntity extends AbstractMessageEntity {\n    type: \"text_link\";\n    /** For “text_link” only, URL that will be opened after user taps on the text */\n    url: string;\n  }\n  export interface TextMentionMessageEntity extends AbstractMessageEntity {\n    type: \"text_mention\";\n    /** For “text_mention” only, the mentioned user */\n    user: User;\n  }\n  export interface CustomEmojiMessageEntity extends AbstractMessageEntity {\n    type: \"custom_emoji\";\n    /** For “custom_emoji” only, unique identifier of the custom emoji. Use getCustomEmojiStickers to get full information about the sticker */\n    custom_emoji_id: string;\n  }\n}\n\n/** This object represents one special entity in a text message. For example, hashtags, usernames, URLs, etc. */\nexport type MessageEntity =\n  | MessageEntity.CommonMessageEntity\n  | MessageEntity.CustomEmojiMessageEntity\n  | MessageEntity.PreMessageEntity\n  | MessageEntity.TextLinkMessageEntity\n  | MessageEntity.TextMentionMessageEntity;\n\n/** This object contains information about the quoted part of a message that is replied to by the given message. */\nexport interface TextQuote {\n  /** Text of the quoted part of a message that is replied to by the given message */\n  text: string;\n  /** Special entities that appear in the quote. Currently, only bold, italic, underline, strikethrough, spoiler, and custom_emoji entities are kept in quotes. */\n  entities?: MessageEntity[];\n  /** Approximate quote position in the original message in UTF-16 code units as specified by the sender */\n  position: number;\n  /** True, if the quote was chosen manually by the message sender. Otherwise, the quote was added automatically by the server. */\n  is_manual?: true;\n}\n\n/** This object contains information about a message that is being replied to, which may come from another chat or forum topic. */\nexport interface ExternalReplyInfo {\n  /** Origin of the message replied to by the given message */\n  origin: MessageOrigin;\n  /** Chat the original message belongs to. Available only if the chat is a supergroup or a channel. */\n  chat?: Chat;\n  /** Unique message identifier inside the original chat. Available only if the original chat is a supergroup or a channel. */\n  message_id?: number;\n  /** Options used for link preview generation for the original message, if it is a text message */\n  link_preview_options?: LinkPreviewOptions;\n  /** Message is an animation, information about the animation */\n  animation?: Animation;\n  /** Message is an audio file, information about the file */\n  audio?: Audio;\n  /** Message is a general file, information about the file */\n  document?: Document;\n  /** Message is a photo, available sizes of the photo */\n  photo?: PhotoSize[];\n  /** Message is a sticker, information about the sticker */\n  sticker?: Sticker;\n  /** Message is a forwarded story */\n  story?: Story;\n  /** Message is a video, information about the video */\n  video?: Video;\n  /** Message is a video note, information about the video message */\n  video_note?: VideoNote;\n  /** Message is a voice message, information about the file */\n  voice?: Voice;\n  /** True, if the message media is covered by a spoiler animation */\n  has_media_spoiler?: true;\n  /** Message is a shared contact, information about the contact */\n  contact?: Contact;\n  /** Message is a dice with random value */\n  dice?: Dice;\n  /** Message is a game, information about the game. More about games » */\n  game?: Game;\n  /** Message is a scheduled giveaway, information about the giveaway */\n  giveaway?: Giveaway;\n  /** A giveaway with public winners was completed */\n  giveaway_winners?: GiveawayWinners;\n  /** Message is an invoice for a payment, information about the invoice. More about payments » */\n  invoice?: Invoice;\n  /** Message is a shared location, information about the location */\n  location?: Location;\n  /** Message contains paid media; information about the paid media */\n  paid_media?: PaidMediaInfo;\n  /** Message is a native poll, information about the poll */\n  poll?: Poll;\n  /** Message is a venue, information about the venue */\n  venue?: Venue;\n}\n\n/** Describes reply parameters for the message that is being sent. */\nexport interface ReplyParameters {\n  /** Identifier of the message that will be replied to in the current chat, or in the chat chat_id if it is specified */\n  message_id: number;\n  /** If the message to be replied to is from a different chat, unique identifier for the chat or username of the channel (in the format @channelusername). Not supported for messages sent on behalf of a business account. */\n  chat_id?: number | string;\n  /** Pass True if the message should be sent even if the specified message to be replied to is not found; can be used only for replies in the same chat and forum topic. Always True for messages sent on behalf of a business account. */\n  allow_sending_without_reply?: boolean;\n  /** Quoted part of the message to be replied to; 0-1024 characters after entities parsing. The quote must be an exact substring of the message to be replied to, including bold, italic, underline, strikethrough, spoiler, and custom_emoji entities. The message will fail to send if the quote isn't found in the original message. */\n  quote?: string;\n  /** Mode for parsing entities in the quote. See formatting options for more details. */\n  quote_parse_mode?: string;\n  /** A JSON-serialized list of special entities that appear in the quote. It can be specified instead of quote_parse_mode. */\n  quote_entities?: MessageEntity[];\n  /** Position of the quote in the original message in UTF-16 code units */\n  quote_position?: number;\n}\n\n/** This object describes the origin of a message. It can be one of\n\n- MessageOriginUser\n- MessageOriginHiddenUser\n- MessageOriginChat\n- MessageOriginChannel */\nexport type MessageOrigin =\n  | MessageOriginUser\n  | MessageOriginHiddenUser\n  | MessageOriginChat\n  | MessageOriginChannel;\n\n/** The message was originally sent by a known user. */\nexport interface MessageOriginUser {\n  /** Type of the message origin, always “user” */\n  type: \"user\";\n  /** Date the message was sent originally in Unix time */\n  date: number;\n  /** User that sent the message originally */\n  sender_user: User;\n}\n\n/** The message was originally sent by an unknown user. */\nexport interface MessageOriginHiddenUser {\n  /** Type of the message origin, always “hidden_user” */\n  type: \"hidden_user\";\n  /** Date the message was sent originally in Unix time */\n  date: number;\n  /** Name of the user that sent the message originally */\n  sender_user_name: string;\n}\n\n/** The message was originally sent on behalf of a chat to a group chat. */\nexport interface MessageOriginChat {\n  /** Type of the message origin, always “chat” */\n  type: \"chat\";\n  /** Date the message was sent originally in Unix time */\n  date: number;\n  /** Chat that sent the message originally */\n  sender_chat: Chat;\n  /** For messages originally sent by an anonymous chat administrator, original message author signature */\n  author_signature?: string;\n}\n\n/** The message was originally sent to a channel chat. */\nexport interface MessageOriginChannel {\n  /** Type of the message origin, always “channel” */\n  type: \"channel\";\n  /** Date the message was sent originally in Unix time */\n  date: number;\n  /** Channel chat to which the message was originally sent */\n  chat: Chat.ChannelChat;\n  /** Unique message identifier inside the chat */\n  message_id: number;\n  /** Signature of the original post author */\n  author_signature?: string;\n}\n\n/** This object represents one size of a photo or a file / sticker thumbnail. */\nexport interface PhotoSize {\n  /** Identifier for this file, which can be used to download or reuse the file */\n  file_id: string;\n  /** Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file. */\n  file_unique_id: string;\n  /** Photo width */\n  width: number;\n  /** Photo height */\n  height: number;\n  /** File size in bytes */\n  file_size?: number;\n}\n\n/** This object represents an animation file (GIF or H.264/MPEG-4 AVC video without sound). */\nexport interface Animation {\n  /** Identifier for this file, which can be used to download or reuse the file */\n  file_id: string;\n  /** Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file. */\n  file_unique_id: string;\n  /** Video width as defined by sender */\n  width: number;\n  /** Video height as defined by sender */\n  height: number;\n  /** Duration of the video in seconds as defined by sender */\n  duration: number;\n  /** Animation thumbnail as defined by sender */\n  thumbnail?: PhotoSize;\n  /** Original animation filename as defined by sender */\n  file_name?: string;\n  /** MIME type of the file as defined by sender */\n  mime_type?: string;\n  /** File size in bytes */\n  file_size?: number;\n}\n\n/** This object represents an audio file to be treated as music by the Telegram clients. */\nexport interface Audio {\n  /** Identifier for this file, which can be used to download or reuse the file */\n  file_id: string;\n  /** Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file. */\n  file_unique_id: string;\n  /** Duration of the audio in seconds as defined by sender */\n  duration: number;\n  /** Performer of the audio as defined by sender or by audio tags */\n  performer?: string;\n  /** Title of the audio as defined by sender or by audio tags */\n  title?: string;\n  /** Original filename as defined by sender */\n  file_name?: string;\n  /** MIME type of the file as defined by sender */\n  mime_type?: string;\n  /** File size in bytes */\n  file_size?: number;\n  /** Thumbnail of the album cover to which the music file belongs */\n  thumbnail?: PhotoSize;\n}\n\n/** This object represents a general file (as opposed to photos, voice messages and audio files). */\nexport interface Document {\n  /** Identifier for this file, which can be used to download or reuse the file */\n  file_id: string;\n  /** Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file. */\n  file_unique_id: string;\n  /** Document thumbnail as defined by sender */\n  thumbnail?: PhotoSize;\n  /** Original filename as defined by sender */\n  file_name?: string;\n  /** MIME type of the file as defined by sender */\n  mime_type?: string;\n  /** File size in bytes */\n  file_size?: number;\n}\n\n/** This object represents a story. */\nexport interface Story {\n  /** Chat that posted the story */\n  chat: Chat;\n  /** Unique identifier for the story in the chat */\n  id: number;\n}\n\n/** This object represents a video file. */\nexport interface Video {\n  /** Identifier for this file, which can be used to download or reuse the file */\n  file_id: string;\n  /** Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file. */\n  file_unique_id: string;\n  /** Video width as defined by sender */\n  width: number;\n  /** Video height as defined by sender */\n  height: number;\n  /** Duration of the video in seconds as defined by sender */\n  duration: number;\n  /** Video thumbnail */\n  thumbnail?: PhotoSize;\n  /** Original filename as defined by sender */\n  file_name?: string;\n  /** MIME type of the file as defined by sender */\n  mime_type?: string;\n  /** File size in bytes */\n  file_size?: number;\n}\n\n/** This object represents a video message (available in Telegram apps as of v.4.0). */\nexport interface VideoNote {\n  /** Identifier for this file, which can be used to download or reuse the file */\n  file_id: string;\n  /** Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file. */\n  file_unique_id: string;\n  /** Video width and height (diameter of the video message) as defined by sender */\n  length: number;\n  /** Duration of the video in seconds as defined by sender */\n  duration: number;\n  /** Video thumbnail */\n  thumbnail?: PhotoSize;\n  /** File size in bytes */\n  file_size?: number;\n}\n\n/** This object represents a voice note. */\nexport interface Voice {\n  /** Identifier for this file, which can be used to download or reuse the file */\n  file_id: string;\n  /** Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file. */\n  file_unique_id: string;\n  /** Duration of the audio in seconds as defined by sender */\n  duration: number;\n  /** MIME type of the file as defined by sender */\n  mime_type?: string;\n  /** File size in bytes */\n  file_size?: number;\n}\n\n/** This object represents a phone contact. */\nexport interface Contact {\n  /** Contact's phone number */\n  phone_number: string;\n  /** Contact's first name */\n  first_name: string;\n  /** Contact's last name */\n  last_name?: string;\n  /** Contact's user identifier in Telegram. */\n  user_id?: number;\n  /** Additional data about the contact in the form of a vCard */\n  vcard?: string;\n}\n\n/** This object represents an animated emoji that displays a random value. */\nexport interface Dice {\n  /** Emoji on which the dice throw animation is based */\n  emoji: string;\n  /** Value of the dice, 1-6 for \"🎲\", \"🎯\" and \"🎳\" base emoji, 1-5 for \"🏀\" and \"⚽\" base emoji, 1-64 for \"🎰\" base emoji */\n  value: number;\n}\n\n/** This object contains information about one answer option in a poll. */\nexport interface PollOption {\n  /** Option text, 1-100 characters */\n  text: string;\n  /** Special entities that appear in the option text. Currently, only custom emoji entities are allowed in poll option texts */\n  text_entities?: MessageEntity[];\n  /** Number of users that voted for this option */\n  voter_count: number;\n}\n\n/** This object contains information about one answer option in a poll to send. */\nexport interface InputPollOption {\n  /** Option text, 1-100 characters */\n  text: string;\n  /** Mode for parsing entities in the text. See formatting options for more details. Currently, only custom emoji entities are allowed */\n  text_parse_mode?: string;\n  /** A list of special entities that appear in the poll option text. It can be specified instead of text_parse_mode */\n  text_entities?: MessageEntity[];\n}\n\n/** This object represents an answer of a user in a non-anonymous poll. */\nexport interface PollAnswer {\n  /** Unique poll identifier */\n  poll_id: string;\n  /** The chat that changed the answer to the poll, if the voter is anonymous */\n  voter_chat?: Chat;\n  /** The user that changed the answer to the poll, if the voter isn't anonymous */\n  user?: User;\n  /** 0-based identifiers of chosen answer options. May be empty if the vote was retracted. */\n  option_ids: number[];\n}\n\n/** This object contains information about a poll. */\nexport interface Poll {\n  /** Unique poll identifier */\n  id: string;\n  /** Poll question, 1-300 characters */\n  question: string;\n  /** Special entities that appear in the question. Currently, only custom emoji entities are allowed in poll questions */\n  question_entities?: MessageEntity[];\n  /** List of poll options */\n  options: PollOption[];\n  /** Total number of users that voted in the poll */\n  total_voter_count: number;\n  /** True, if the poll is closed */\n  is_closed: boolean;\n  /** True, if the poll is anonymous */\n  is_anonymous: boolean;\n  /** Poll type, currently can be “regular” or “quiz” */\n  type: \"regular\" | \"quiz\";\n  /** True, if the poll allows multiple answers */\n  allows_multiple_answers: boolean;\n  /** 0-based identifier of the correct answer option. Available only for polls in the quiz mode, which are closed, or was sent (not forwarded) by the bot or to the private chat with the bot. */\n  correct_option_id?: number;\n  /** Text that is shown when a user chooses an incorrect answer or taps on the lamp icon in a quiz-style poll, 0-200 characters */\n  explanation?: string;\n  /** Special entities like usernames, URLs, bot commands, etc. that appear in the explanation */\n  explanation_entities?: MessageEntity[];\n  /** Amount of time in seconds the poll will be active after creation */\n  open_period?: number;\n  /** Point in time (Unix timestamp) when the poll will be automatically closed */\n  close_date?: number;\n}\n\n/** This object represents a point on the map. */\nexport interface Location {\n  /** Latitude as defined by sender */\n  latitude: number;\n  /** Longitude as defined by sender */\n  longitude: number;\n  /** The radius of uncertainty for the location, measured in meters; 0-1500 */\n  horizontal_accuracy?: number;\n  /** Time relative to the message sending date, during which the location can be updated; in seconds. For active live locations only. */\n  live_period?: number;\n  /** The direction in which user is moving, in degrees; 1-360. For active live locations only. */\n  heading?: number;\n  /** The maximum distance for proximity alerts about approaching another chat member, in meters. For sent live locations only. */\n  proximity_alert_radius?: number;\n}\n\n/** Describes the paid media added to a message. */\nexport interface PaidMediaInfo {\n  /** The number of Telegram Stars that must be paid to buy access to the media */\n  star_count: number;\n  /** Information about the paid media */\n  paid_media: PaidMedia[];\n}\n\n/** This object describes paid media. Currently, it can be one of\n\n- PaidMediaPreview\n- PaidMediaPhoto\n- PaidMediaVideo */\nexport type PaidMedia =\n  | PaidMediaPreview\n  | PaidMediaPhoto\n  | PaidMediaVideo;\n\n/** The paid media isn't available before the payment. */\nexport interface PaidMediaPreview {\n  /** Type of the paid media, always “preview” */\n  type: \"preview\";\n  /** Media width as defined by the sender */\n  width?: number;\n  /** Media height as defined by the sender */\n  height?: number;\n  /** Duration of the media in seconds as defined by the sender */\n  duration?: number;\n}\n\n/** The paid media is a photo. */\nexport interface PaidMediaPhoto {\n  /** Type of the paid media, always “photo” */\n  type: \"photo\";\n  /** The photo */\n  photo: PhotoSize[];\n}\n\n/** The paid media is a video. */\nexport interface PaidMediaVideo {\n  /** Type of the paid media, always “video” */\n  type: \"video\";\n  /** The video */\n  video: Video;\n}\n\n/** This object represents a venue. */\nexport interface Venue {\n  /** Venue location. Can't be a live location */\n  location: Location;\n  /** Name of the venue */\n  title: string;\n  /** Address of the venue */\n  address: string;\n  /** Foursquare identifier of the venue */\n  foursquare_id?: string;\n  /** Foursquare type of the venue. (For example, “arts_entertainment/default”, “arts_entertainment/aquarium” or “food/icecream”.) */\n  foursquare_type?: string;\n  /** Google Places identifier of the venue */\n  google_place_id?: string;\n  /** Google Places type of the venue. (See supported types.) */\n  google_place_type?: string;\n}\n\n/** Describes data sent from a Web App to the bot. */\nexport interface WebAppData {\n  /** The data. Be aware that a bad client can send arbitrary data in this field. */\n  data: string;\n  /** Text of the web_app keyboard button from which the Web App was opened. Be aware that a bad client can send arbitrary data in this field. */\n  button_text: string;\n}\n\n/** This object represents the content of a service message, sent whenever a user in the chat triggers a proximity alert set by another user. */\nexport interface ProximityAlertTriggered {\n  /** User that triggered the alert */\n  traveler: User;\n  /** User that set the alert */\n  watcher: User;\n  /** The distance between the users */\n  distance: number;\n}\n\n/** This object represents a service message about a change in auto-delete timer settings. */\nexport interface MessageAutoDeleteTimerChanged {\n  /** New auto-delete time for messages in the chat; in seconds */\n  message_auto_delete_time: number;\n}\n\n/** This object represents a service message about a user boosting a chat. */\nexport interface ChatBoostAdded {\n  /** Number of boosts added by the user */\n  boost_count: number;\n}\n\n/** This object describes the way a background is filled based on the selected colors. Currently, it can be one of\n\n- BackgroundFillSolid\n- BackgroundFillGradient\n- BackgroundFillFreeformGradient */\nexport type BackgroundFill =\n  | BackgroundFillSolid\n  | BackgroundFillGradient\n  | BackgroundFillFreeformGradient;\n\n/** The background is filled using the selected color. */\nexport interface BackgroundFillSolid {\n  /** Type of the background fill, always “solid” */\n  type: \"solid\";\n  /** The color of the background fill in the RGB24 format */\n  color: number;\n}\n\n/** The background is a gradient fill. */\nexport interface BackgroundFillGradient {\n  /** Type of the background fill, always “gradient” */\n  type: \"gradient\";\n  /** Top color of the gradient in the RGB24 format */\n  top_color: number;\n  /** Bottom color of the gradient in the RGB24 format */\n  bottom_color: number;\n  /** Clockwise rotation angle of the background fill in degrees; 0-359 */\n  rotation_angle: number;\n}\n\n/** The background is a freeform gradient that rotates  after every message in the chat. */\nexport interface BackgroundFillFreeformGradient {\n  /** Type of the background fill, always “freeform_gradient” */\n  type: \"freeform_gradient\";\n  /** A list of the 3 or 4 base colors that are used to generate the freeform gradient in the RGB24 format */\n  colors: number[];\n}\n\n/** This object describes the type of a background. Currently, it can be one of\n\n- BackgroundTypeFill\n- BackgroundTypeWallpaper\n- BackgroundTypePattern\n- BackgroundTypeChatTheme\n- BackgroundTypeFill */\nexport type BackgroundType =\n  | BackgroundTypeFill\n  | BackgroundTypeWallpaper\n  | BackgroundTypePattern\n  | BackgroundTypeChatTheme;\n\n/** The background is automatically filled based on the selected colors. */\nexport interface BackgroundTypeFill {\n  /** Type of the background, always “fill” */\n  type: \"fill\";\n  /** The background fill */\n  fill: BackgroundFill;\n  /** Dimming of the background in dark themes, as a percentage; 0-100 */\n  dark_theme_dimming: number;\n}\n\n/** The background is a wallpaper in the JPEG format. */\nexport interface BackgroundTypeWallpaper {\n  /** Type of the background, always “wallpaper” */\n  type: \"wallpaper\";\n  /** Document with the wallpaper */\n  document: Document;\n  /** Dimming of the background in dark themes, as a percentage; 0-100 */\n  dark_theme_dimming: number;\n  /** True, if the wallpaper is downscaled to fit in a 450x450 square and then box-blurred with radius 12 */\n  is_blurred?: true;\n  /** True, if the background moves slightly when the device is tilted */\n  is_moving?: true;\n}\n\n/** The background is a PNG or TGV (gzipped subset of SVG with MIME type “application/x-tgwallpattern”) pattern to be combined with the background fill chosen by the user. */\nexport interface BackgroundTypePattern {\n  /** Type of the background, always “pattern” */\n  type: \"pattern\";\n  /** Document with the pattern */\n  document: Document;\n  /** The background fill that is combined with the pattern */\n  fill: BackgroundFill;\n  /** Intensity of the pattern when it is shown above the filled background; 0-100 */\n  intensity: number;\n  /** True, if the background fill must be applied only to the pattern itself. All other pixels are black in this case. For dark themes only */\n  is_inverted?: true;\n  /** True, if the background moves slightly when the device is tilted */\n  is_moving?: true;\n}\n\n/** The background is taken directly from a built-in chat  theme. */\nexport interface BackgroundTypeChatTheme {\n  /** Type of the background, always “chat_theme” */\n  type: \"chat_theme\";\n  /** Name of the chat theme, which is usually an emoji */\n  theme_name: string;\n}\n\n/** This object represents a chat background. */\nexport interface ChatBackground {\n  /** Type of the background*/\n  type: BackgroundType;\n}\n\n/** This object represents a service message about a new forum topic created in the chat. */\nexport interface ForumTopicCreated {\n  /** Name of the topic */\n  name: string;\n  /** Color of the topic icon in RGB format */\n  icon_color: number;\n  /** Unique identifier of the custom emoji shown as the topic icon */\n  icon_custom_emoji_id?: string;\n}\n\n/** This object represents a service message about an edited forum topic. */\nexport interface ForumTopicEdited {\n  /** New name of the topic, if it was edited */\n  name?: string;\n  /** New identifier of the custom emoji shown as the topic icon, if it was edited; an empty string if the icon was removed */\n  icon_custom_emoji_id?: string;\n}\n\n/** This object represents a service message about a forum topic closed in the chat. Currently holds no information. */\nexport interface ForumTopicClosed {}\n\n/** This object represents a service message about a forum topic reopened in the chat. Currently holds no information. */\nexport interface ForumTopicReopened {}\n\n/** This object represents a service message about General forum topic hidden in the chat. Currently holds no information. */\nexport interface GeneralForumTopicHidden {}\n\n/** This object represents a service message about General forum topic unhidden in the chat. Currently holds no information. */\nexport interface GeneralForumTopicUnhidden {}\n\n/** This object contains information about a user that was shared with the bot using a KeyboardButtonRequestUsers button. */\nexport interface SharedUser {\n  /** Identifier of the shared user. The bot may not have access to the user and could be unable to use this identifier, unless the user is already known to the bot by some other means. */\n  user_id: number;\n  /** First name of the user, if the name was requested by the bot */\n  first_name?: string;\n  /** Last name of the user, if the name was requested by the bot */\n  last_name?: string;\n  /** Username of the user, if the username was requested by the bot */\n  username?: string;\n  /** Available sizes of the chat photo, if the photo was requested by the bot */\n  photo?: PhotoSize[];\n}\n\n/** This object contains information about the user whose identifier was shared with the bot using a KeyboardButtonRequestUsers button. */\nexport interface UsersShared {\n  /** Identifier of the request */\n  request_id: number;\n  /** Information about users shared with the bot. */\n  users: SharedUser[];\n}\n\n/** This object contains information about a chat that was shared with the bot using a KeyboardButtonRequestChat button. */\nexport interface ChatShared {\n  /** Identifier of the request */\n  request_id: number;\n  /** Identifier of the shared chat. The bot may not have access to the chat and could be unable to use this identifier, unless the chat is already known to the bot by some other means. */\n  chat_id: number;\n  /** Title of the chat, if the title was requested by the bot. */\n  title?: string;\n  /** Username of the chat, if the username was requested by the bot and available. */\n  username?: string;\n  /** Available sizes of the chat photo, if the photo was requested by the bot */\n  photo?: PhotoSize[];\n}\n\n/** This object represents a service message about a user allowing a bot to write messages after adding it to the attachment menu, launching a Web App from a link, or accepting an explicit request from a Web App sent by the method requestWriteAccess. */\nexport interface WriteAccessAllowed {\n  /** True, if the access was granted after the user accepted an explicit request from a Web App sent by the method requestWriteAccess */\n  from_request?: boolean;\n  /** Name of the Web App, if the access was granted when the Web App was launched from a link */\n  web_app_name?: string;\n  /** True, if the access was granted when the bot was added to the attachment or side menu */\n  from_attachment_menu?: boolean;\n}\n\n/** This object represents a service message about a video chat scheduled in the chat. */\nexport interface VideoChatScheduled {\n  /** Point in time (Unix timestamp) when the video chat is supposed to be started by a chat administrator */\n  start_date: number;\n}\n\n/** This object represents a service message about a video chat started in the chat. Currently holds no information. */\nexport interface VideoChatStarted {}\n\n/** This object represents a service message about a video chat ended in the chat. */\nexport interface VideoChatEnded {\n  /** Video chat duration in seconds */\n  duration: number;\n}\n\n/** This object represents a service message about new members invited to a video chat. */\nexport interface VideoChatParticipantsInvited {\n  /** New members that were invited to the video chat */\n  users: User[];\n}\n\n/** This object represents a service message about the creation of a scheduled giveaway. Currently holds no information. */\nexport interface GiveawayCreated {}\n\n/** This object represents a message about a scheduled giveaway. */\nexport interface Giveaway {\n  /** The list of chats which the user must join to participate in the giveaway */\n  chats: Chat[];\n  /** Point in time (Unix timestamp) when winners of the giveaway will be selected */\n  winners_selection_date: number;\n  /** The number of users which are supposed to be selected as winners of the giveaway */\n  winner_count: number;\n  /** True, if only users who join the chats after the giveaway started should be eligible to win */\n  only_new_members?: true;\n  /** True, if the list of giveaway winners will be visible to everyone */\n  has_public_winners?: true;\n  /** Description of additional giveaway prize */\n  prize_description?: string;\n  /** A list of two-letter ISO 3166-1 alpha-2 country codes indicating the countries from which eligible users for the giveaway must come. If empty, then all users can participate in the giveaway. Users with a phone number that was bought on Fragment can always participate in giveaways. */\n  country_codes?: string[];\n  /** The number of months the Telegram Premium subscription won from the giveaway will be active for */\n  premium_subscription_month_count?: number;\n}\n\n/** This object represents a message about the completion of a giveaway with public winners. */\nexport interface GiveawayWinners {\n  /** The chat that created the giveaway */\n  chat: Chat;\n  /** Identifier of the message with the giveaway in the chat */\n  giveaway_message_id: number;\n  /** Point in time (Unix timestamp) when winners of the giveaway were selected */\n  winners_selection_date: number;\n  /** Total number of winners in the giveaway */\n  winner_count: number;\n  /** List of up to 100 winners of the giveaway */\n  winners: User[];\n  /** The number of other chats the user had to join in order to be eligible for the giveaway */\n  additional_chat_count?: number;\n  /** The number of months the Telegram Premium subscription won from the giveaway will be active for */\n  premium_subscription_month_count?: number;\n  /** Number of undistributed prizes */\n  unclaimed_prize_count?: number;\n  /** True, if only users who had joined the chats after the giveaway started were eligible to win */\n  only_new_members?: true;\n  /** True, if the giveaway was canceled because the payment for it was refunded */\n  was_refunded?: true;\n  /** Description of additional giveaway prize */\n  prize_description?: string;\n}\n\n/** This object represents a service message about the completion of a giveaway without public winners. */\nexport interface GiveawayCompleted {\n  /** Number of winners in the giveaway */\n  winner_count: number;\n  /** Number of undistributed prizes */\n  unclaimed_prize_count?: number;\n  /** Message with the giveaway that was completed, if it wasn't deleted */\n  giveaway_message?: Message;\n}\n\n/** Describes the options used for link preview generation. */\nexport interface LinkPreviewOptions {\n  /** True, if the link preview is disabled */\n  is_disabled?: boolean;\n  /** URL to use for the link preview. If empty, then the first URL found in the message text will be used */\n  url?: string;\n  /** True, if the media in the link preview is supposed to be shrunk; ignored if the URL isn't explicitly specified or media size change isn't supported for the preview */\n  prefer_small_media?: boolean;\n  /** True, if the media in the link preview is supposed to be enlarged; ignored if the URL isn't explicitly specified or media size change isn't supported for the preview */\n  prefer_large_media?: boolean;\n  /** True, if the link preview must be shown above the message text; otherwise, the link preview will be shown below the message text */\n  show_above_text?: boolean;\n}\n\n/** This object represents a sticker. */\nexport interface Sticker {\n  /** Identifier for this file, which can be used to download or reuse the file */\n  file_id: string;\n  /** Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file. */\n  file_unique_id: string;\n  /** Type of the sticker, currently one of “regular”, “mask”, “custom_emoji”. The type of the sticker is independent from its format, which is determined by the fields is_animated and is_video. */\n  type: \"regular\" | \"mask\" | \"custom_emoji\";\n  /** Sticker width */\n  width: number;\n  /** Sticker height */\n  height: number;\n  /** True, if the sticker is animated */\n  is_animated: boolean;\n  /** True, if the sticker is a video sticker */\n  is_video: boolean;\n  /** Sticker thumbnail in the .WEBP or .JPG format */\n  thumbnail?: PhotoSize;\n  /** Emoji associated with the sticker */\n  emoji?: string;\n  /** Name of the sticker set to which the sticker belongs */\n  set_name?: string;\n  /** For premium regular stickers, premium animation for the sticker */\n  premium_animation?: File;\n  /** For mask stickers, the position where the mask should be placed */\n  mask_position?: MaskPosition;\n  /** For custom emoji stickers, unique identifier of the custom emoji */\n  custom_emoji_id?: string;\n  /** File size in bytes */\n  file_size?: number;\n}\n\n/** This object represents a sticker set. */\nexport interface StickerSet {\n  /** Sticker set name */\n  name: string;\n  /** Sticker set title */\n  title: string;\n  /** Type of stickers in the set, currently one of “regular”, “mask”, “custom_emoji” */\n  sticker_type: \"regular\" | \"mask\" | \"custom_emoji\";\n  /** List of all set stickers */\n  stickers: Sticker[];\n  /** Sticker set thumbnail in the .WEBP, .TGS, or .WEBM format */\n  thumbnail?: PhotoSize;\n}\n\n/** This object describes the position on faces where a mask should be placed by default. */\nexport interface MaskPosition {\n  /** The part of the face relative to which the mask should be placed. One of “forehead”, “eyes”, “mouth”, or “chin”. */\n  point: \"forehead\" | \"eyes\" | \"mouth\" | \"chin\";\n  /** Shift by X-axis measured in widths of the mask scaled to the face size, from left to right. For example, choosing -1.0 will place mask just to the left of the default mask position. */\n  x_shift: number;\n  /** Shift by Y-axis measured in heights of the mask scaled to the face size, from top to bottom. For example, 1.0 will place the mask just below the default mask position. */\n  y_shift: number;\n  /** Mask scaling coefficient. For example, 2.0 means double size. */\n  scale: number;\n}\n\n/** This object represents a game. Use BotFather to create and edit games, their short names will act as unique identifiers. */\nexport interface Game {\n  /** Title of the game */\n  title: string;\n  /** Description of the game */\n  description: string;\n  /** Photo that will be displayed in the game message in chats. */\n  photo: PhotoSize[];\n  /** Brief description of the game or high scores included in the game message. Can be automatically edited to include current high scores for the game when the bot calls setGameScore, or manually edited using editMessageText. 0-4096 characters. */\n  text: string;\n  /** Special entities that appear in text, such as usernames, URLs, bot commands, etc. */\n  text_entities: MessageEntity[];\n  /** Animation that will be displayed in the game message in chats. Upload via BotFather */\n  animation: Animation;\n}\n\n/** This object represents one row of the high scores table for a game. */\nexport interface GameHighScore {\n  /** Position in high score table for the game */\n  position: number;\n  /** User */\n  user: User;\n  /** Score */\n  score: number;\n}\n\n/** This object represents a file ready to be downloaded. The file can be downloaded via the link https://api.telegram.org/file/bot<token>/<file_path>. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile. */\nexport interface File {\n  /** Identifier for this file, which can be used to download or reuse the file */\n  file_id: string;\n  /** Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file. */\n  file_unique_id: string;\n  /** File size in bytes */\n  file_size?: number;\n  /** File path. Use https://api.telegram.org/file/bot<token>/<file_path> to get the file. */\n  file_path?: string;\n}\n\n/** This object describes the type of a reaction. Currently, it can be one of\n\n- ReactionTypeEmoji\n- ReactionTypeCustomEmoji */\nexport type ReactionType = ReactionTypeEmoji | ReactionTypeCustomEmoji;\n\n/** The reaction is based on an emoji. */\nexport interface ReactionTypeEmoji {\n  /** Type of the reaction, always “emoji” */\n  type: \"emoji\";\n  /** Reaction emoji. Currently, it can be one of \"👍\", \"👎\", \"❤\", \"🔥\", \"🥰\", \"👏\", \"😁\", \"🤔\", \"🤯\", \"😱\", \"🤬\", \"😢\", \"🎉\", \"🤩\", \"🤮\", \"💩\", \"🙏\", \"👌\", \"🕊\", \"🤡\", \"🥱\", \"🥴\", \"😍\", \"🐳\", \"❤‍🔥\", \"🌚\", \"🌭\", \"💯\", \"🤣\", \"⚡\", \"🍌\", \"🏆\", \"💔\", \"🤨\", \"😐\", \"🍓\", \"🍾\", \"💋\", \"🖕\", \"😈\", \"😴\", \"😭\", \"🤓\", \"👻\", \"👨‍💻\", \"👀\", \"🎃\", \"🙈\", \"😇\", \"😨\", \"🤝\", \"✍\", \"🤗\", \"🫡\", \"🎅\", \"🎄\", \"☃\", \"💅\", \"🤪\", \"🗿\", \"🆒\", \"💘\", \"🙉\", \"🦄\", \"😘\", \"💊\", \"🙊\", \"😎\", \"👾\", \"🤷‍♂\", \"🤷\", \"🤷‍♀\", \"😡\" */\n  emoji:\n    | \"👍\"\n    | \"👎\"\n    | \"❤\"\n    | \"🔥\"\n    | \"🥰\"\n    | \"👏\"\n    | \"😁\"\n    | \"🤔\"\n    | \"🤯\"\n    | \"😱\"\n    | \"🤬\"\n    | \"😢\"\n    | \"🎉\"\n    | \"🤩\"\n    | \"🤮\"\n    | \"💩\"\n    | \"🙏\"\n    | \"👌\"\n    | \"🕊\"\n    | \"🤡\"\n    | \"🥱\"\n    | \"🥴\"\n    | \"😍\"\n    | \"🐳\"\n    | \"❤‍🔥\"\n    | \"🌚\"\n    | \"🌭\"\n    | \"💯\"\n    | \"🤣\"\n    | \"⚡\"\n    | \"🍌\"\n    | \"🏆\"\n    | \"💔\"\n    | \"🤨\"\n    | \"😐\"\n    | \"🍓\"\n    | \"🍾\"\n    | \"💋\"\n    | \"🖕\"\n    | \"😈\"\n    | \"😴\"\n    | \"😭\"\n    | \"🤓\"\n    | \"👻\"\n    | \"👨‍💻\"\n    | \"👀\"\n    | \"🎃\"\n    | \"🙈\"\n    | \"😇\"\n    | \"😨\"\n    | \"🤝\"\n    | \"✍\"\n    | \"🤗\"\n    | \"🫡\"\n    | \"🎅\"\n    | \"🎄\"\n    | \"☃\"\n    | \"💅\"\n    | \"🤪\"\n    | \"🗿\"\n    | \"🆒\"\n    | \"💘\"\n    | \"🙉\"\n    | \"🦄\"\n    | \"😘\"\n    | \"💊\"\n    | \"🙊\"\n    | \"😎\"\n    | \"👾\"\n    | \"🤷‍♂\"\n    | \"🤷\"\n    | \"🤷‍♀\"\n    | \"😡\";\n}\n\n/** The reaction is based on a custom emoji. */\nexport interface ReactionTypeCustomEmoji {\n  /** Type of the reaction, always “custom_emoji” */\n  type: \"custom_emoji\";\n  /** Custom emoji identifier */\n  custom_emoji_id: string;\n}\n\n/** Represents a reaction added to a message along with the number of times it was added. */\nexport interface ReactionCount {\n  /** Type of the reaction */\n  type: ReactionType;\n  /** Number of times the reaction was added */\n  total_count: number;\n}\n\n/** This object represents a change of a reaction on a message performed by a user. */\nexport interface MessageReactionUpdated {\n  /** The chat containing the message the user reacted to */\n  chat: Chat;\n  /** Unique identifier of the message inside the chat */\n  message_id: number;\n  /** The user that changed the reaction, if the user isn't anonymous */\n  user?: User;\n  /** The chat on behalf of which the reaction was changed, if the user is anonymous */\n  actor_chat?: Chat;\n  /** Date of the change in Unix time */\n  date: number;\n  /** Previous list of reaction types that were set by the user */\n  old_reaction: ReactionType[];\n  /** New list of reaction types that have been set by the user */\n  new_reaction: ReactionType[];\n}\n\n/** This object represents reaction changes on a message with anonymous reactions. */\nexport interface MessageReactionCountUpdated {\n  /** The chat containing the message */\n  chat: Chat;\n  /** Unique message identifier inside the chat */\n  message_id: number;\n  /** Date of the change in Unix time */\n  date: number;\n  /** List of reactions that are present on the message */\n  reactions: ReactionCount[];\n}\n"],"names":[],"mappings":"AAAA,gDAAgD"}